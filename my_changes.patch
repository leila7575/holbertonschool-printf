diff --git a/main.c b/main.c
new file mode 100644
index 0000000..35a7545
--- /dev/null
+++ b/main.c
@@ -0,0 +1,44 @@
+#include <limits.h>
+#include <stdio.h>
+#include "main.h"
+
+/**
+ * main - Entry point
+ *
+ * Return: Always 0
+ */
+int main(void)
+{
+    int len;
+    int len2;
+    unsigned int ui;
+    void *addr;
+
+    len = _printf("Let's try to printf a simple sentence.\n");
+    len2 = printf("Let's try to printf a simple sentence.\n");
+    ui = (unsigned int)INT_MAX + 1024;
+    addr = (void *)0x7ffe637541f0;
+    _printf("Length:[%d, %i]\n", len, len);
+    printf("Length:[%d, %i]\n", len2, len2);
+    _printf("Negative:[%d]\n", -762534);
+    printf("Negative:[%d]\n", -762534);
+    _printf("Unsigned:[%u]\n", ui);
+    printf("Unsigned:[%u]\n", ui);
+    _printf("Unsigned octal:[%o]\n", ui);
+    printf("Unsigned octal:[%o]\n", ui);
+    _printf("Unsigned hexadecimal:[%x, %X]\n", ui, ui);
+    printf("Unsigned hexadecimal:[%x, %X]\n", ui, ui);
+    _printf("Character:[%c]\n", 'H');
+    printf("Character:[%c]\n", 'H');
+    _printf("String:[%s]\n", "I am a string !");
+    printf("String:[%s]\n", "I am a string !");
+    _printf("Address:[%p]\n", addr);
+    printf("Address:[%p]\n", addr);
+    len = _printf("Percent:[%%]\n");
+    len2 = printf("Percent:[%%]\n");
+    _printf("Len:[%d]\n", len);
+    printf("Len:[%d]\n", len2);
+    _printf("Unknown:[%r]\n");
+    printf("Unknown:[%r]\n");
+    return (0);
+}
diff --git a/print_bin.c b/print_bin.c
new file mode 100644
index 0000000..b0efbd8
--- /dev/null
+++ b/print_bin.c
@@ -0,0 +1,34 @@
+#include "main.h"
+
+/**
+ * print_bin - prints binary number.
+ * @value: parameter.
+ * Return: integer
+ */
+int print_bin(va_list value)
+{
+	int flag = 0;
+	int count = 0;
+	int i, bit = 1, bin_digit;
+	unsigned int num = va_arg(value, unsigned int);
+	unsigned int bit_mask;
+
+	for (i = 0; i < 32; i++)
+	{
+		bit_mask = ((bit << (31 - i)) & num);
+		if (bit_mask >> (31 - i))
+			flag = 1;
+		if (flag)
+		{
+			bin_digit = bit_mask >> (31 - i);
+			_putchar(bin_digit + 48);
+			count++;
+		}
+	}
+	if (count == 0)
+	{
+		count++;
+		_putchar('0');
+	}
+	return (count);
+}
diff --git a/print_int.c b/print_int.c
new file mode 100644
index 0000000..328b381
--- /dev/null
+++ b/print_int.c
@@ -0,0 +1,55 @@
+#include "main.h"
+#include <stdarg.h>
+
+/**
+ * print_number - Helper function to print an integer
+ * @n: The integer to print
+ * Return: The number of digits printed
+ */
+int print_number(int n)
+{
+	int count = 0;
+	int divisor = 1;
+
+	if (n < 0)
+	{
+		_putchar('-');
+		count++;
+	}
+
+	while (n / divisor > 9)
+		divisor *= 10;
+
+	while (divisor != 0)
+	{
+		count++;
+		_putchar('0' + (n / divisor));
+		n %= divisor;
+		divisor /= 10;
+	}
+
+	return count;
+}
+
+/**
+ * print_i - prints integer
+ * @args: argument to print
+ * Return: integer
+ */
+int print_i(va_list args)
+{
+	int n = va_arg(args, int);
+	return print_number(n);
+}
+
+/**
+ * print_d - prints decimal
+ * @args: argument to print
+ * Return: integer
+ */
+int print_d(va_list args)
+{
+	int n = va_arg(args, int);
+	return print_number(n);
+}
+
diff --git a/print_s.c b/print_s.c
index af71d6a..66413c3 100644
--- a/print_s.c
+++ b/print_s.c
@@ -7,15 +7,9 @@
 int print_strings(va_list arg)
 {
 	int i = 0
-<<<<<<< HEAD
-	int length
-	char *str 
-	str = va_arg(arg, char*);
-=======
 		int length
 		char *str
 		str = va_arg(arg, char*);
->>>>>>> 2b4ac787b07a8de569c02dfe3649715bf2d8c2a8
 
 	if (str == NULL)
 	{
@@ -28,9 +22,5 @@ int print_strings(va_list arg)
 		_putchar(str[i]);
 	}
 	return (length);
-<<<<<<< HEAD
-		
-=======
 
->>>>>>> 2b4ac787b07a8de569c02dfe3649715bf2d8c2a8
 }
